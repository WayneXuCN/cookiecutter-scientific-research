# Environment variables go here, can be read by `Visual Studio Code`, `uv` and `python-dotenv` package:
#  ----------------------------------------------------------------
#   Enable VSCode .env auto-loading:
#     1. Place this file in project root
#     2. Add to VSCode settings (Ctrl+,):
#         "python.envFile": "${workspaceFolder}/.env",
#         "python.terminal.activateEnvironment": true
#     3. Restart VSCode or Reload Window (Ctrl+Shift+P)
#
#  --------------------------------------------------------------------
#   `uv` dotenv loading (via dotenvy crate):
#     Supported files: .env, .env.local, .env.development
#   
#     Usage examples:
#       - Default loading: uv run script.py (auto-loads .env from CWD)
#       - Custom file: uv run --env-file config/.env.dev script.py
#       - Multiple files: uv run --env-file .env --env-file .env.secret script.py
#       - Environment variable: UV_ENV_FILE=".env.dev .env.secret" uv run script.py
#       - Disable loading: uv run --no-env-file script.py
#
#     Precedence rules:
#       1. System environment variables
#       2. Values from later --env-file arguments
#       3. Values from earlier --env-file arguments
#  ---------------------------------------------------------------
#   Example `src/script.py`:
#    ----------------------------------------------------------------
#    import os
#    import dotenv
#
#    project_dir = os.path.join(os.path.dirname(__file__), os.pardir)
#    dotenv_path = os.path.join(project_dir, '.env')
#    dotenv.load_dotenv(dotenv_path)
#
#    print("Loaded ENV:", os.getenv("YOUR_VARIABLE"))
#    ----------------------------------------------------------------
#
# DO NOT ADD THIS FILE TO VERSION CONTROL!

# Python Environment
# PYTHONPATH=path/to/your/pythonpath

# AI/LLM API Keys
# OPENAI_API_KEY=sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# Compute and GPU Settings
# CUDA_VISIBLE_DEVICES=0,1  # Specific GPUs to use
# OMP_NUM_THREADS=8  # Control parallel threads 
# MKL_NUM_THREADS=4  # Intel Math Kernel Library threads