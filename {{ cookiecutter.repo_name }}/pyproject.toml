[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = {{ cookiecutter.module_name|tojson }}
version = "0.0.1"
description = {{ cookiecutter.description|tojson }}
authors = [
  { name = {{ cookiecutter.author_name|tojson }}, email = {{ cookiecutter.author_email|tojson }} },
]
{% if cookiecutter.open_source_license != 'No license file' %}license = { file = "LICENSE" }{% endif %}
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    {% if cookiecutter.open_source_license == 'MIT' %}"License :: OSI Approved :: MIT License"{% elif cookiecutter.open_source_license == 'BSD-3-Clause' %}"License :: OSI Approved :: BSD License"{% endif %}
]
{% if cookiecutter.linting_and_formatting == 'flake8+black+isort' %}
[tool.black]
line-length = 99
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
)/
'''

[tool.isort]
profile = "black"
known_first_party = ["{{ cookiecutter.module_name }}"]
force_sort_within_sections = true
{% endif %}
{% if cookiecutter.linting_and_formatting == 'ruff' %}
[tool.ruff]
# Basic settings
line-length = 88
src = ["{{ cookiecutter.module_name }}"]
include = ["pyproject.toml", "{{ cookiecutter.module_name }}/**/*.py"]
exclude = [
    ".eggs",
    "*.egg-info",
    ".git",
    ".hg",
    ".mypy_cache",
    "__pycache__",
    ".tox",
    ".venv",
    "build",
    "dist",
]

[tool.ruff.lint]
# Enabled rule sets
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # Pyflakes (syntax error checking)
    "I",   # isort (import sorting)
    "B",   # flake8-bugbear (common bug checking)
    "C4",  # flake8-comprehensions (comprehension optimizations)
    "UP",  # pyupgrade (Python version upgrade suggestions)
    "SIM", # flake8-simplify (code simplification)
    "Q",   # flake8-quotes (quote checking)
]
# Ignored rules
ignore = [
    "E501", # Line length (handled by formatter)
    "B008", # Mutable default values in function arguments (sometimes needed)
]
isort = {known-first-party = ["src"], force-sort-within-sections = true}

[tool.ruff.format]
quote-style = "double"            # Use double quotes
indent-style = "space"            # Use space indentation
skip-magic-trailing-comma = false # Do not skip magic trailing comma
line-ending = "auto"              # Use automatic line ending
{% endif %}

{% if cookiecutter.notebook == 'marimo' %}
[tool.marimo]
runtime = { auto_instantiate = false, auto_reload = "lazy" }
save = { autosave = "after_delay", autosave_delay = 5, format_on_save = true }
formatting = { line_length = 120 }
display = { default_width = "full" }
package_management = { manager = "{{ cookiecutter.environment_manager }}" }
experimental = { lsp = true }
diagnostics = { enabled = true }

[tool.marimo.language_servers.pylsp]
enabled = true
enable_mypy = true
{% if cookiecutter.linting_and_formatting == 'ruff' %}
enable_ruff = true 
{% endif %}
{% if cookiecutter.linting_and_formatting == 'flake8+black+isort' %}
enable_flake8 = true 
enable_pylint = true
enable_pyflakes = true  
{% endif %}
{% endif %}